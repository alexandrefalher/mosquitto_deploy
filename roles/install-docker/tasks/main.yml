- name: gather distribution data
  shell: lsb_release -i | cut -f 2
  register: distrib_raw

- name: set distribution fact
  set_fact:
    distrib: "{{distrib_raw.stdout|lower}}"

- name: assert architecture compatibility
  assert:
    that:
      - ansible_facts['architecture']|lower in architectures
    quiet: yes
    fail_msg: "architecture {{ansible_facts['architecture']|lower}} not supported"

- name: assert distribution compatibility
  assert:
    that:
      - distrib|lower in distributions
    quiet: yes
    fail_msg: "distribution {{distrib|lower}} not supported"

- name: assert distribution release compatibility
  assert:
    that:
      - ansible_facts['distribution_release']|lower in distributions.{{distrib|lower}}
    quiet: yes
    fail_msg: "release {{ansible_facts['distribution_release']}} not supported"

- name: set architecture fact
  set_fact:
    arch: "{{item.value}}"
  with_dict: "{{architectures}}"
  when: item.key == ansible_facts['architecture']

- name: install utils
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - gnupg-agent
      - software-properties-common
    state: present
    update_cache: yes

- name: install docker gpg item.key
  apt_key:
    url: https://download.docker.com/linux/{{distrib}}/gpg
    state: present

- name: add docker apt repository
  apt_repository:
    repo: "deb [arch={{arch}}] https://download.docker.com/linux/{{distrib}} {{ansible_facts['distribution_release']|lower}} stable"
    state: present
    update_cache: yes

- name: install docker engine
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose
    state: present

- name: add user to docker group
  user:
    name: "{{ansible_user}}"
    groups:
    - docker
    append: yes